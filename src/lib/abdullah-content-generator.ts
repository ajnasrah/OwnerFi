/**
 * Abdullah Personal Brand Content Generator
 * Generates 5 daily personal brand videos (Mindset, Business, Money, Freedom, Story/Lesson)
 *
 * NOTE: This is referenced by test/abdullah route but the actual implementation
 * should be in your codebase. This is a minimal stub to make the build pass.
 */

export interface AbdullahVideo {
  theme: string;
  script: string;
  title: string;
  caption: string;
  engagementQuestion: string;
}

export interface AbdullahDailyContent {
  date: Date;
  videos: AbdullahVideo[];
}

/**
 * Generate Abdullah's 5 daily videos
 * Stub implementation - replace with actual OpenAI script generation
 */
export async function generateAbdullahDailyContent(
  openaiApiKey: string,
  date: Date = new Date()
): Promise<AbdullahDailyContent> {
  const themes = ['Mindset', 'Business', 'Money', 'Freedom', 'Story'];

  const videos: AbdullahVideo[] = themes.map(theme => ({
    theme,
    script: `This is a ${theme} video for ${date.toLocaleDateString()}. [Generated by stub]`,
    title: `${theme} Video`,
    caption: `Daily ${theme} content`,
    engagementQuestion: `What's your take on this?`,
  }));

  return {
    date,
    videos,
  };
}

/**
 * Validate Abdullah script
 */
export function validateAbdullahScript(video: AbdullahVideo): { valid: boolean; errors: string[] } {
  const errors: string[] = [];

  if (!video.script || video.script.length < 40) {
    errors.push('Script too short (min 40 words)');
  }

  if (video.script && video.script.length > 120) {
    errors.push('Script too long (max 120 words)');
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * Build HeyGen video request for Abdullah video
 * Stub implementation
 */
export function buildAbdullahVideoRequest(
  video: AbdullahVideo,
  callbackId?: string
): any {
  return {
    video_inputs: [{
      character: {
        type: 'talking_photo',
        talking_photo_id: 'd33fe3abc2914faa88309c3bdb9f47f4', // Abdullah avatar
        scale: 1.0,
      },
      voice: {
        type: 'text',
        input_text: video.script,
        voice_id: '5bd25d00f41c477989e1e121a16986d3', // Abdullah voice
        speed: 1.1,
      }
    }],
    caption: false,
    dimension: { width: 1080, height: 1920 },
    test: false,
    callback_id: callbackId,
  };
}

export default {
  generateAbdullahDailyContent,
  validateAbdullahScript,
  buildAbdullahVideoRequest,
};
